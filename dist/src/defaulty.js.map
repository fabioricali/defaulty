{"version":3,"sources":["../../src/defaulty.js"],"names":["defaulty","targetObj","defaultObj","exclude","i","hasOwnProperty","indexOf","copy","args","Object","assign","apply","module","exports"],"mappings":";;;;AAAA;;;;;;;;AAQA,IAAMA,WAAW,SAAXA,QAAW,CAACC,SAAD,EAAYC,UAAZ,EAAyC;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;;AACtD,SAAK,IAAIC,CAAT,IAAcF,UAAd,EAA0B;AACtB;AACA,YAAIA,WAAWG,cAAX,CAA0BD,CAA1B,KAAgCD,QAAQG,OAAR,CAAgBF,CAAhB,MAAuB,CAAC,CAA5D,EAA+D;AAC3D,gBAAI,CAACH,UAAUI,cAAV,CAAyBD,CAAzB,CAAD,IAAgC,OAAOH,UAAUG,CAAV,CAAP,KAAwB,WAA5D,EAAyE;AACrEH,0BAAUG,CAAV,IAAeF,WAAWE,CAAX,CAAf;AACH,aAFD,MAEO,IAAI,QAAOH,UAAUG,CAAV,CAAP,MAAwB,QAA5B,EAAsC;AACzCJ,yBAASC,UAAUG,CAAV,CAAT,EAAuBF,WAAWE,CAAX,CAAvB;AACH;AACJ;AACJ;AACD,WAAOH,SAAP;AACH,CAZD;;AAcA;;;;;;;AAOA,IAAMM,OAAO,SAAPA,IAAO,GAAa;AAAA,sCAATC,IAAS;AAATA,YAAS;AAAA;;AACtBA,SAAK,CAAL,IAAUC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,KAAK,CAAL,CAAlB,CAAV;AACA,WAAOR,SAASW,KAAT,YAAqBH,IAArB,CAAP;AACH,CAHD;;AAKAI,OAAOC,OAAP,GAAiBb,QAAjB;AACAY,OAAOC,OAAP,CAAeN,IAAf,GAAsBA,IAAtB","file":"defaulty.js","sourcesContent":["/**\r\n * Copies deep missing properties to the target object\r\n * @param targetObj {Object} target object\r\n * @param defaultObj {Object} default object\r\n * @param exclude {Array} exclude properties from copy\r\n * @returns {*}\r\n */\r\n\r\nconst defaulty = (targetObj, defaultObj, exclude = []) => {\r\n    for (let i in defaultObj) {\r\n        /* istanbul ignore else  */\r\n        if (defaultObj.hasOwnProperty(i) && exclude.indexOf(i) === -1) {\r\n            if (!targetObj.hasOwnProperty(i) || typeof targetObj[i] === 'undefined') {\r\n                targetObj[i] = defaultObj[i];\r\n            } else if (typeof targetObj[i] === 'object') {\r\n                defaulty(targetObj[i], defaultObj[i]);\r\n            }\r\n        }\r\n    }\r\n    return targetObj;\r\n};\r\n\r\n/**\r\n * Creates new target object and copies deep missing properties to the target object\r\n * @param args[0] {Object} target object\r\n * @param args[1] {Object} default object\r\n * @param args[2] {Array} exclude properties from copy\r\n * @returns {*}\r\n */\r\nconst copy = (...args) => {\r\n    args[0] = Object.assign({}, args[0]);\r\n    return defaulty.apply(this, args);\r\n};\r\n\r\nmodule.exports = defaulty;\r\nmodule.exports.copy = copy;"]}